# image docker (container virtuel) pour executer les jobs (e.g effectuer le build de l'application)
image: "maven:3-jdk-8"

# commandes à executer sur le container virtuel (e.g ajout d'outils non dispo sur l'image de base)
before_script:
  - echo "I am a script executed before"

# definition de l'ordre d'execution des jobs 
# (e.g tous les jobs qui ont 'state:build' seront executés en premiers, puis tous les jobs de 'state:test' etc..)
stages:
  - build
  - test
  - package
  - deploy

# Define a cache storing maven dependencies in order to not download again dependencies on each job step
#cache:
#  paths:
#    - .m2/repository

# definition d'un job, à quelle étape il sera executé (stage), le script a executé (e.g mvn compile)
#job_build:
#  stage: build
#  script:
#   - mvn -f ./step3/pom.xml compile
    
# definition un nouveau job
#job_test:
#  stage: test
#  script:
#    - mvn -f ./step3/pom.xml test

# definition un nouveau job
#job_package:
#  stage: package
#  script:
#    - mvn -f ./step3/pom.xml package
  # definition d'un livrable issue de la compilation (et des autres opérations demandées), disponible au téléchargement
#  artifacts:
#    paths:
#    - ./step3/target/*.jar
#    expire_in: 1 week

# definition un nouveau job pour le déploiement continu
job_deploy:
  stage: deploy
  image: ruby:2.3
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_PRODUCTION --api-key=$HEROKU_API_KEY
    

  only:
    - master
    - dev
 